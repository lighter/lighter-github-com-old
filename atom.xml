<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Lighter]]></title>
  <link href="http://lighter.tw/atom.xml" rel="self"/>
  <link href="http://lighter.tw/"/>
  <updated>2014-07-20T15:21:57+08:00</updated>
  <id>http://lighter.tw/</id>
  <author>
    <name><![CDATA[Willy lighter]]></name>
    <email><![CDATA[apple.xva@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[筆記] 安裝 Vagrant]]></title>
    <link href="http://lighter.tw/blog/2014/06/27/bi-ji-an-zhuang-vagrant/"/>
    <updated>2014-06-27T22:36:58+08:00</updated>
    <id>http://lighter.tw/blog/2014/06/27/bi-ji-an-zhuang-vagrant</id>
    <content type="html"><![CDATA[<p>安裝環境 OS X 10.9.3</p>

<p>Step 1. 下載 <a href="http://www.vagrantup.com/downloads.html">Vagrant</a></p>

<p>Step 2. 下載OS</p>

<p>開啟終端機，建立好一個<code>vagrant</code>的資料夾</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ mkdir vagrant
</span><span class="line">$ cd vagrant</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><a href="http://www.vagrantbox.es/">Vagrantbox</a>，這邊有很多已經裝好的box，你可以自己找行你需要的。</p>

<p>這邊我安裝的是<code>Ubuntu precise 64 VirtualBox</code>，他的網址是<code>http://files.vagrantup.com/precise64.box</code>。接著在終端機輸入下面的指令安裝</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ vagrant box add Ubuntu64 http://files.vagrantup.com/precise64.box</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安裝完畢後，需將這個虛擬機初始化並且啟動</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ vagrant box init Ubuntu64
</span><span class="line">$ vagrant up #啟動</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>啟動完成後，需要連線到這台虛擬機</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ vagrant ssh</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="vagrant-">Vagrant 指令</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ vagrant halt #關閉
</span><span class="line">$ vagrant reload #重啟
</span><span class="line">$ vagrant status #狀態
</span><span class="line">$ vagrant destroy #刪除
</span><span class="line">$ vagrant list #列出虛擬機</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="section">參考資料</h3>

<ul>
  <li><a href="http://www.vagrantup.com/">Vagrant</a></li>
  <li><a href="http://vinn.logdown.com/posts/2014/05/22/note-use-of-vagrant-deployment">[Note] 使用 Vagrant進行部署練習</a></li>
  <li><a href="http://www.vagrantbox.es/">Vagrantbox.es</a></li>
  <li><a href="http://eva0919.github.io/2013/04/26/%E7%94%A8vm%E6%89%8D%E6%98%AF%E5%A5%BD%E7%9A%84%E5%B7%A5%E7%A8%8B%E5%B8%AB-vagrant%E7%AF%87%E5%85%A5%E9%96%80%E7%89%88/">用VM才是好的工程師-vagrant篇(入門版)</a></li>
  <li><a href="http://gogojimmy.net/2013/05/26/vagrant-tutorial/">[教學]使用Vagrant練習環境佈署</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Laravel part 8]]></title>
    <link href="http://lighter.tw/blog/2014/06/21/laravel-part-8/"/>
    <updated>2014-06-21T22:37:03+08:00</updated>
    <id>http://lighter.tw/blog/2014/06/21/laravel-part-8</id>
    <content type="html"><![CDATA[<p>這章節只是想做個整理，這些只是我根據官方文件還有一些影片自己實做，然後加以整理大概記錄一下，主要是釐清一些過程使用，所以幾乎都不會詳細的描述。如果有問題歡迎一起討論。</p>

<p>目前使用比較多的還是codeigniter，相較之下laravel的debug比ci界面好看多了，還有<code>artisan</code>也真的蠻好用的。<code>Eloquent</code>真的是很好用，但是我不太確定當複雜的sql查詢時，很多大量的子查詢，還有個家sql提供的內件方法也都不一樣時，是否也可寫的這麼容易?就我目前工作上使用ci，我都是自己寫sql使用bind的方式，至於為什麼要用bind，似乎也是oracle的重複查詢時速度會比較快(因為cache)，有時間再來查查資料吧。</p>

<p>整個完整的code我也放在GIT上供大家參考囉<a href="https://github.com/lighter/Laravel_sample">[Laravel GIT]</a></p>

<ol>
  <li><a href="http://lighter.tw/blog/2014/05/29/laravel-part-1/">Laravel part 1</a> - 安裝 <code>Laravel</code></li>
  <li><a href="http://lighter.tw/blog/2014/05/30/laravel-part-2/">Laravel part 2</a> - 安裝<code>jquery</code>、<code>bootstrap</code></li>
  <li><a href="http://lighter.tw/blog/2014/05/31/laravel-part-3/">Laravel part 3</a> - 建立資料庫</li>
  <li><a href="http://lighter.tw/blog/2014/06/02/laravel-part-4/">Laravel part 4</a> - 登入 &amp; 簡易Session操作</li>
  <li><a href="http://lighter.tw/blog/2014/06/04/laravel-part-5/">Laravel part 5</a> - 簡單的樣板使用</li>
  <li><a href="http://lighter.tw/blog/2014/06/07/laravel-part-6/">Laravel part 6</a> - 帳號建立 &amp; 列表</li>
  <li><a href="http://lighter.tw/blog/2014/06/09/laravel-part-7/">Laravel part 7</a> - 帳號修改 &amp; 顯示帳號資訊 &amp; 修改帳號 &amp; 刪除帳號</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[laravel part 7]]></title>
    <link href="http://lighter.tw/blog/2014/06/09/laravel-part-7/"/>
    <updated>2014-06-09T00:02:13+08:00</updated>
    <id>http://lighter.tw/blog/2014/06/09/laravel-part-7</id>
    <content type="html"><![CDATA[<p>這也是最後一個章節了，將會介紹到</p>

<ol>
  <li>顯示帳號資訊</li>
  <li>修改帳號資訊</li>
  <li>刪除帳號</li>
</ol>

<!-- more -->

<h2 id="section">顯示帳號資訊</h2>

<p>開啓<code>AccountController.php</code>，找到<code>show</code>這個方法，修改的code如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>AccountController.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="php"><span class="line">  <span class="k">public</span> <span class="k">function</span> <span class="nf">show</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="nv">$account</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
</span><span class="line">    <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;account.show&#39;</span><span class="p">)</span>
</span><span class="line">      <span class="o">-&gt;</span><span class="na">with</span><span class="p">(</span><span class="s1">&#39;account&#39;</span><span class="p">,</span> <span class="nv">$account</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這邊要搜尋帳號也很簡單，使用<code>User::find($id)</code>就可以根據<code>ID</code>找到對應的帳號資料，也不用特地去寫些sql語法，但這應該只單存這種簡單的情況下使用吧！如果有多個Table要Join，或是有些特殊的欄位條件要篩選應該就沒這容易了。</p>

<p>最後將這個搜尋結果塞到<code>view</code>裡面使用，所以接下來就是編輯view的部分；開啓<code>app/views/account/show.blade.php</code>，輸入的code如下</p>

<div><script src="https://gist.github.com/941fbf8d6296043346f6.js?file=show.blade.php"></script>
<noscript><pre><code>@extends('layouts.base')

@section('content')
  &lt;h1&gt;Show Account&lt;/h1&gt;
  {{ Form::open(['class' =&gt; 'form-horizontal', 'role' =&gt; 'form']) }}
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;col-sm-2 control-label&quot; for=&quot;inputEmail3&quot;&gt;Email&lt;/label&gt;
      &lt;div class=&quot;col-sm-10&quot;&gt;
        &lt;input id=&quot;inputEmail3&quot; class=&quot;form-control&quot; type=&quot;email&quot; value=&quot;{{ $account-&gt;email }}&quot; disabled&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;col-sm-2 control-label&quot; for=&quot;inputUsername&quot;&gt;Username&lt;/label&gt;
      &lt;div class=&quot;col-sm-10&quot;&gt;
        &lt;input id=&quot;inputUsername&quot; class=&quot;form-control&quot; type=&quot;text&quot; value=&quot;{{ $account-&gt;username }}&quot; disabled&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;col-sm-2 control-label&quot; for=&quot;inputname&quot;&gt;name&lt;/label&gt;
      &lt;div class=&quot;col-sm-10&quot;&gt;
        &lt;input id=&quot;inputname&quot; class=&quot;form-control&quot; type=&quot;text&quot; value=&quot;{{ $account-&gt;name }}&quot; disabled&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  {{ Form::close() }}
@stop</code></pre></noscript></div>

<p>這邊很簡單你要顯示的欄位資料就使用<code>-&gt;</code>這樣的方式操作，example: <code>$account-&gt;email</code></p>

<h2 id="section-1">修改帳號資訊</h2>

<p>編輯會呼叫到<code>AccountController.php</code>的<code>edit</code>方法，code如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>AccountController.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="php"><span class="line">  <span class="k">public</span> <span class="k">function</span> <span class="nf">edit</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="nv">$account</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">    <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;account.edit&#39;</span><span class="p">)</span>
</span><span class="line">      <span class="o">-&gt;</span><span class="na">with</span><span class="p">(</span><span class="s1">&#39;account&#39;</span><span class="p">,</span> <span class="nv">$account</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這邊跟顯示的地方並沒有什麼不同！接著就來看<code>app/views/account/edit.blade.php</code>吧</p>

<div><script src="https://gist.github.com/f5984711c8d1a80d48fe.js?file=edit.blade.php"></script>
<noscript><pre><code>@extends('layouts.base')

@section('content')
  &lt;h1&gt;Edit Account&lt;/h1&gt;
  {{ HTML::ul($errors-&gt;all()) }}
  &lt;!-- 1 --&gt;
  {{ Form::model($account, array('route' =&gt; array('account.update', $account-&gt;id), 'method' =&gt; 'PUT', 'class' =&gt; 'form-horizontal', 'role' =&gt; 'form')) }}
    &lt;div class=&quot;form-group&quot;&gt;
      {{ Form::label('email', 'Email', ['class' =&gt; 'col-sm-2 control-label']) }}
      &lt;div class=&quot;col-sm-10&quot;&gt;
        {{ Form::text('email', $account-&gt;email, ['class' =&gt; 'form-control']) }}
      &lt;/div&gt;
    &lt;/div&gt;
     &lt;div class=&quot;form-group&quot;&gt;
      {{ Form::label('username', 'Username', ['class' =&gt; 'col-sm-2 control-label']) }}
      &lt;div class=&quot;col-sm-10&quot;&gt;
        {{ Form::text('username', $account-&gt;username, ['class' =&gt; 'form-control']) }}
      &lt;/div&gt;
    &lt;/div&gt;
     &lt;div class=&quot;form-group&quot;&gt;
      {{ Form::label('name', 'Name', ['class' =&gt; 'col-sm-2 control-label']) }}
      &lt;div class=&quot;col-sm-10&quot;&gt;
        {{ Form::text('name', $account-&gt;name, ['class' =&gt; 'form-control']) }}
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;div class=&quot;col-sm-offset-2 col-sm-10&quot;&gt;
        {{ Form::submit('Edit the Account!', array('class' =&gt; 'btn btn-primary')) }}
      &lt;/div&gt;
    &lt;/div&gt;

  {{ Form::close() }}
@stop</code></pre></noscript></div>

<p>這邊大致上跟新增很像！唯一比較不一樣的是&#8220;(可以看到註解1的地方)，這邊要指定更新的方法，<code>account.update</code>就是呼叫<code>AccountController</code>的<code>update</code>方法，並帶入<code>$account-&gt;id</code>帳號ID；還有設定<code>'method' =&gt; 'PUT'</code>，這是因為要符合<code>restful</code>。</p>

<p>接下來就來寫更新資料的<code>update</code>方法吧！code如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>AccountController.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
</pre></td><td class="code"><pre><code class="php"><span class="line">  <span class="k">public</span> <span class="k">function</span> <span class="nf">update</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="nv">$rules</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class="line">      <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|email&#39;</span><span class="p">,</span>
</span><span class="line">      <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required&#39;</span><span class="p">,</span>
</span><span class="line">      <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required&#39;</span>
</span><span class="line">    <span class="p">);</span>
</span><span class="line">
</span><span class="line">    <span class="nv">$validator</span> <span class="o">=</span>  <span class="nx">Validator</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="nx">Input</span><span class="o">::</span><span class="na">all</span><span class="p">(),</span> <span class="nv">$rules</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="nv">$validator</span><span class="o">-&gt;</span><span class="na">fails</span><span class="p">())</span> <span class="p">{</span>
</span><span class="line">      <span class="k">return</span> <span class="nx">Redirect</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;account/&#39;</span> <span class="o">.</span> <span class="nv">$id</span> <span class="o">.</span> <span class="s1">&#39;/edit&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="o">-&gt;</span><span class="na">withErrors</span><span class="p">(</span><span class="nv">$validator</span><span class="p">)</span>
</span><span class="line">        <span class="o">-&gt;</span><span class="na">withInput</span><span class="p">(</span><span class="nx">Input</span><span class="o">::</span><span class="na">all</span><span class="p">());</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">else</span> <span class="p">{</span>
</span><span class="line">      <span class="nv">$account</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
</span><span class="line">      <span class="nv">$account</span><span class="o">-&gt;</span><span class="na">email</span> <span class="o">=</span> <span class="nx">Input</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="nv">$account</span><span class="o">-&gt;</span><span class="na">username</span> <span class="o">=</span> <span class="nx">Input</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;username&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="nv">$account</span><span class="o">-&gt;</span><span class="na">name</span> <span class="o">=</span> <span class="nx">Input</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="nv">$account</span><span class="o">-&gt;</span><span class="na">save</span><span class="p">();</span>
</span><span class="line">
</span><span class="line">      <span class="nx">Session</span><span class="o">::</span><span class="na">flash</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;修改成功&#39;</span><span class="p">);</span>
</span><span class="line">      <span class="k">return</span> <span class="nx">Redirect</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;account&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這邊幾乎都跟建立資料時一樣，我就不再贅述了。</p>

<h2 id="section-2">刪除帳號</h2>

<p>前一個章節已經建立好了刪除的連結，但是尚未在controller內寫方法，其實也很簡單，刪除預設會去呼叫<code>destroy</code>這個方法，所以找到<code>AccountController.php</code>內的<code>destroy</code>，code如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>AccountController.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="php"><span class="line">  <span class="k">public</span> <span class="k">function</span> <span class="nf">destroy</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="nv">$account</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">find</span><span class="p">(</span><span class="nv">$id</span><span class="p">);</span>
</span><span class="line">    <span class="nv">$account</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">();</span>
</span><span class="line">
</span><span class="line">    <span class="nx">Session</span><span class="o">::</span><span class="na">flash</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;刪除成功&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">Redirect</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;account&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>直接看code就可以理解！找到該筆帳號(根據ID)，最後<code>delete</code>！很簡單吧…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[laravel part 6]]></title>
    <link href="http://lighter.tw/blog/2014/06/07/laravel-part-6/"/>
    <updated>2014-06-07T00:58:18+08:00</updated>
    <id>http://lighter.tw/blog/2014/06/07/laravel-part-6</id>
    <content type="html"><![CDATA[<p>這個章節就來介紹</p>

<ol>
  <li>帳號列表</li>
  <li>建立帳號</li>
</ol>

<p>這裡會介紹到如何<code>select</code>跟<code>insert</code>資料,以及<code>URL</code>的使用!</p>

<!-- more -->

<h2 id="section">帳號列表</h2>

<p>首先開啟<code>AccountController.php</code>,輸入以下的code:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>AccountController.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="php"><span class="line">  <span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">()</span>
</span><span class="line">  <span class="p">{</span>
</span><span class="line">    <span class="nv">$accounts</span> <span class="o">=</span> <span class="nx">User</span><span class="o">::</span><span class="na">all</span><span class="p">();</span>
</span><span class="line">    <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;account.list&#39;</span><span class="p">)</span>
</span><span class="line">      <span class="o">-&gt;</span><span class="na">with</span><span class="p">(</span><span class="s1">&#39;accounts&#39;</span><span class="p">,</span> <span class="nv">$accounts</span><span class="p">);</span>
</span><span class="line">    <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這裡可以看到撈取資料非常簡單!這裡使用的是<a href="http://kejyun.github.io/Laravel-4-Documentation-Traditional-Chinese/docs/eloquent/#introduction">Eloquent ORM</a>的方式,相關介紹官方文件已經說得很清楚了,這邊就不再多贅述了.</p>

<ol>
  <li>簡單的一行<code>User::all()</code>,比起以前自己要寫好<code>sql</code>語法,然後再使用<code>db</code>方法去query,相對之下這少了很多行code,但是我想…複雜的sql語法可能還是要自己寫;跟codeigniter相較之下我覺得這個更簡潔了…</li>
  <li>帶入查詢結果到<code>view</code>,有寫過codeigniter應該都不陌生..跟<code>$this-&gt;load-&gt;view('view', $data)</code>很相像.</li>
</ol>

<p>只是我覺得有點怪的是,這樣似乎資料就不再Model了,似乎已經在Controller就可以做掉這些,在codeigniter都會把這些sql的東西寫到特定的Model檔案,然後Controller去load這些Model,至於深入原因有時間再找找看資料好了.</p>

<p>Note:如果你的code有錯誤,在網頁出現到下圖的錯誤訊息,但卻沒有顯示code的錯誤問題在哪</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-16.jpg" /></p>

<p>可以開啟<code>app/config/app.php</code>這支檔案,找到<code>debug</code>這個key值,並把它改為<code>true</code>,這樣就可以顯示錯誤訊息了:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="s1">&#39;debug&#39;</span> <span class="o">=&gt;</span> <span class="k">true</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這邊可以很明確的看到<code>$accounts = User:all();</code>少一個分號!</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-17.jpg" /></p>

<p>再來開啟<code>app/views/account/list.blade.php</code>輸入下面的code:</p>

<div><script src="https://gist.github.com/5abb468d5c547c1305e7.js?file=list.blade.php"></script>
<noscript><pre><code>@extends('layouts.base')

@section('content')
  &lt;h1&gt;List Account&lt;/h1&gt;
  &lt;!-- 1 --&gt;
  @if (Session::has('message'))
    &lt;div class=&quot;alert alert-info&quot;&gt;{{Session::get('message')}}&lt;/div&gt;
  @endif

  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col-md-6 col-md-offset-3&quot; style=&quot;text-align: left;&quot;&gt;
      &lt;!-- 2 --&gt;
      &lt;a class=&quot;btn btn-primary&quot; href=&quot;{{ URL::to('account/create') }}&quot;&gt;Create Account&lt;/a&gt;
      &lt;hr&gt;
      &lt;table class=&quot;table table-striped table-bordered&quot;&gt;
        &lt;thead&gt;
          &lt;tr&gt;
            &lt;td&gt;ID&lt;/td&gt;
            &lt;td&gt;Email&lt;/td&gt;
            &lt;td&gt;Actions&lt;/td&gt;
          &lt;/tr&gt;
        &lt;/thead&gt;
        &lt;tbody&gt;
        &lt;!-- 3 --&gt;
        @foreach($accounts as $key =&gt; $value)
          &lt;tr&gt;
            &lt;td&gt;{{ $key + 1 }}&lt;/td&gt;
            &lt;td&gt;{{ $value-&gt;email }}&lt;/td&gt;
            &lt;td&gt;
              &lt;!-- 4 --&gt;
              &lt;a href=&quot;{{ URL::to('account/' . $value-&gt;id) }}&quot; class=&quot;btn btn-success&quot;&gt;Show&lt;/a&gt;
              &lt;a href=&quot;{{ URL::to('account/' . $value-&gt;id . '/edit') }}&quot; class=&quot;btn btn-info&quot;&gt;Edit&lt;/a&gt;
              {{ Form::open(array('url' =&gt; 'account/' . $value-&gt;id, 'class' =&gt; 'pull-right')) }}
                {{ Form::hidden('_method', 'DELETE') }}
                {{ Form::submit('Delete', array('class' =&gt; 'btn btn-danger')) }}
              {{ Form::close() }}
            &lt;/td&gt;
          &lt;/tr&gt;
        @endforeach
        &lt;/tbody&gt;
    &lt;/div&gt;
  &lt;/div&gt;
@stop</code></pre></noscript></div>

<blockquote>
  <p>下面數字列表請依照code上的註解數字.</p>
</blockquote>

<ol>
  <li>用來顯示<code>session</code>的訊息, 例如建立帳號時回到這頁要顯示建立成功的字樣,這在之後會用到.</li>
  <li>這裡使用’URL`來建立連結, 前面網頁漏漏長的http也不用你寫了.</li>
  <li>這裡的<code>$accounts</code>跟controller內的key值是相對應的. 因為回傳的是多比陣列並且是依照資料表的column欄位名稱,所以後面都適用<code>$value-&gt;COLUMN_NAME</code>.</li>
  <li>這裡<code>Show</code>跟<code>Edit</code>都很單純用網址的方式就可以, 刪除就比較特別了, 因為Laravel是遵照<code>RESTful</code>, 一般的連結是發出<code>GET request</code>, 無法發出<code>Delete request</code>,所以需要借由<code>form</code>內的<code>button</code>來產生<code>Delete request</code>(參考<a href="http://stackoverflow.com/a/19645142/685060">這篇</a>)</li>
</ol>

<p>如果都沒問題的話應該可以看到下面的畫面</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-18.jpg" /></p>

<h2 id="section-1">建立帳號</h2>

<p>首先先來編輯建立帳號的畫面! 開啟<code>app/views/account/create.blade.php</code>, 輸入下面的code</p>

<div><script src="https://gist.github.com/aa6f3eb91ff6f2e0a03e.js?file=create.blade.php"></script>
<noscript><pre><code>@extends('layouts.base')

@section('content')
  &lt;h1&gt;Create Account&lt;/h1&gt;
  &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col-md-6 col-md-offset-3&quot; style=&quot;text-align: left;&quot;&gt;
      
      // 1
      {{ HTML::ul($errors-&gt;all()) }}
      
      // 2
      {{ Form::open(['url' =&gt; 'account']) }}
      &lt;div class=&quot;form-group&quot;&gt;
        {{ Form::label('name','Name') }}
        
        // 3
        {{ Form::text('name', Input::old('name'), ['class' =&gt; 'form-control']) }}
      &lt;/div&gt;

      &lt;div class=&quot;form-group&quot;&gt;
        {{ Form::label('username','Username') }}
        {{ Form::text('username', Input::old('username'), ['class' =&gt; 'form-control']) }}
      &lt;/div&gt;

      &lt;div class=&quot;form-group&quot;&gt;
        {{ Form::label('email','Email') }}
        {{ Form::text('email', Input::old('email'), ['class' =&gt; 'form-control']) }}
      &lt;/div&gt;

      &lt;div class=&quot;form-group&quot;&gt;
        {{ Form::label('password','Password') }}
        {{ Form::password('password', ['class' =&gt; 'form-control']) }}
      &lt;/div&gt;

      // 4
      {{ Form::submit('Create Account', ['class' =&gt; 'btn btn-primary']) }}

      {{ Form::close() }}
    &lt;/div&gt;
  &lt;/div&gt;
@stop</code></pre></noscript></div>

<p>這邊並沒有什麼太複雜的,大概依照註解的號碼解釋一下</p>

<ol>
  <li>有錯誤訊息時,會使用<code>ul</code>的條列出你輸入的資料哪裡有問題.</li>
  <li>表單要送出的<code>url</code>路徑,可以直接指定<code>controller</code>,無需其他的參數.</li>
  <li>這邊我覺得好用的地方是<code>Input::old()</code>,取回就資料,以往我為了要保留住舊資料,所以就將<code>button</code>寫成<code>ajax</code>的方式送出資料.</li>
  <li>表單的送出按鈕.</li>
</ol>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-19.jpg" /></p>

<p>接下來就是寫入資料庫的動作,開啟<code>app/controller/AccountController.php</code>,因為<code>laravel</code>是使用<code>RESTful</code>,所以預設會使用<code>store</code>這個function. code如下:</p>

<div><script src="https://gist.github.com/d28b28c4c16ccd04c40b.js?file=AccountController.php"></script>
<noscript><pre><code>public function store()
{
  // 1. 
  $rules = array(
    'email' =&gt; 'required|email',
    'password' =&gt; 'required|alphaNum|min:3',
    'name' =&gt; 'required',
    'username' =&gt; 'required'
  );

  $validator = Validator::make(Input::all(), $rules);

  if ($validator-&gt;fails()) {
    return Redirect::to('account/create')
      -&gt;withErrors($validator)
      -&gt;withInput(Input::except('password')); // 2.
  }
  else {
    // 3.
    $account = new User;
    $account-&gt;email = Input::get('email');
    $account-&gt;password = Hash::make(Input::get('password'));
    $account-&gt;name = Input::get('name');
    $account-&gt;username = Input::get('username');
    $account-&gt;save();
  
  // 4.
    Session::flash('message', 'Created success');
    return Redirect::to('account');
  }
}</code></pre></noscript></div>

<ol>
  <li>驗證規則: 我個人覺得很方便,不然以往我都是使用<code>empty</code>等php的function一個一個條件檢查.而且連Email檢查也不用寫正規式檢查,可以看到密碼的部分<code>min:3</code>,最少為3個數字.</li>
  <li>返回舊資料: 這樣在返回建立帳號頁面時,也不會遺漏使用原本輸入的資料,就不用全部重新輸入了!</li>
  <li>建立帳號: 這邊也不用自己寫sql語法,整個很直覺,指定好sql欄位的值,最後<code>save</code>.</li>
  <li>返回建立成功訊息: 使用flash的session,至於在哪顯示?可以在<code>list.blade.php</code>中找到<code>@if (Session::has('message'))</code>這區塊的code,就是用來顯示這邊的<code>message</code>.</li>
</ol>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-20.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[laravel part 5]]></title>
    <link href="http://lighter.tw/blog/2014/06/04/laravel-part-5/"/>
    <updated>2014-06-04T22:12:39+08:00</updated>
    <id>http://lighter.tw/blog/2014/06/04/laravel-part-5</id>
    <content type="html"><![CDATA[<h2 id="controller">建立新的Controller</h2>

<p>這部分主要是介紹樣板使用，主要是可以避免相同的code一再重複，只是要換掉中間的內容！首先我想要建立一個<code>帳號</code>的新增修改刪除的頁面，所以我先建立一個<code>Controller</code>；一樣使用<code>artisan</code>，開啟終端機輸入下列指令：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">php artisan controller:make AccountController</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-14.jpg" /></p>

<!-- more -->

<h2 id="routes">修改Routes</h2>

<p>再來就是加入新的<code>route</code>啦！開啟<code>routes.php</code>，新增的code如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>routes.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="c1">// Account</span>
</span><span class="line"><span class="nx">Route</span><span class="o">::</span><span class="na">resource</span><span class="p">(</span><span class="s1">&#39;account&#39;</span><span class="p">,</span> <span class="s1">&#39;AccountController&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這樣一來就會幫我們建立好對應的<code>RESTFul</code>。</p>

<h2 id="view">建立新的View</h2>

<p>首先我建立一個樣板，這樣大家只要引用他，就可以擁有整個頁面的框架，僅需要各自修改各自的內容即可！</p>

<p>首先我建立的的路徑跟檔案是這樣的：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">app
</span><span class="line">  ⌞ views
</span><span class="line">    ⌞ layouts
</span><span class="line">      ⌞ base.blade.php</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接下在<code>base.blade.php</code>輸入下面的code</p>

<div><script src="https://gist.github.com/43bda04901e61d152711.js?file=base.blade.php"></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;Show&lt;/title&gt;
  {{ HTML::script('public/js/jquery-1.11.0.min.js') }}
  {{ HTML::style('public/bootstrap-3.1.1-dist/css/bootstrap.min.css') }}
  {{ HTML::style('public/bootstrap-3.1.1-dist/css/bootstrap-theme.min.css') }}
  &lt;style&gt;
    body {
      padding-top: 50px;
    }
    .starter-template {
      padding: 40px 15px;
      text-align: center;
    }
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div class=&quot;navbar navbar-inverse navbar-fixed-top&quot; role=&quot;navigation&quot;&gt;
    &lt;div class=&quot;container&quot;&gt;

      &lt;div class=&quot;navbar-header&quot;&gt;
        &lt;button type=&quot;button&quot; class=&quot;navbar-toggle&quot; data-toggle=&quot;collapse&quot; data-target=&quot;.navbar-collapse&quot;&gt;
          &lt;span class=&quot;sr-only&quot;&gt;Toggle navigation&lt;/span&gt;
          &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;
          &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;
          &lt;span class=&quot;icon-bar&quot;&gt;&lt;/span&gt;
        &lt;/button&gt;
        &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Show&lt;/a&gt;
      &lt;/div&gt;
      &lt;div class=&quot;collapse navbar-collapse&quot;&gt;
        &lt;ul class=&quot;nav navbar-nav&quot;&gt;
          &lt;li class=&quot;active&quot;&gt;&lt;a href=&quot;#&quot;&gt;Home&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#about&quot;&gt;About&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;{{ URL::to('logout') }}&quot;&gt;Logout&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/div&gt;&lt;!--/.nav-collapse --&gt;

    &lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;container&quot;&gt;
    &lt;div class=&quot;starter-template&quot; style=&quot;position: relative;&quot;&gt;
      @yield('content')
    &lt;/div&gt;
  &lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</code></pre></noscript></div>

<p>需特別留意的是第45行，你會更動的內容都跟這有關係！</p>

<p>接著就是建立各自功能的畫面啦！我的檔案結構如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class=""><span class="line">app
</span><span class="line">  ⌞ views
</span><span class="line">    ⌞ account
</span><span class="line">      ⌞ create.blade.php // 建立
</span><span class="line">      ⌞ edit.blade.php   // 修改
</span><span class="line">      ⌞ list.blade.php   // 列表所有帳號
</span><span class="line">      ⌞ show.blade.php   // 該帳號細部資訊</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接著就各自修改這四個檔案吧，很簡單！先舉一個例，先以<code>list.blade.php</code>為例，code如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>list.blade.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="o">@</span><span class="k">extends</span><span class="p">(</span><span class="s1">&#39;layouts.base&#39;</span><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="o">@</span><span class="nx">section</span><span class="p">(</span><span class="s1">&#39;content&#39;</span><span class="p">)</span>
</span><span class="line">  <span class="o">&lt;</span><span class="nx">h1</span><span class="o">&gt;</span><span class="k">List</span> <span class="nx">Account</span><span class="o">&lt;/</span><span class="nx">h1</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">@</span><span class="nx">stop</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li><code>@extends(layouts.base)</code>就是引用原本的頁面基本的架構，這樣一來你就不用再寫一堆html header了。</li>
  <li><code>@section('content')</code>跟剛剛的<code>yield('content')</code>是做相呼應的！因此<code>content</code>可由你自己決定，但最後不要忘記加上<code>@stop</code>了。</li>
</ol>

<h2 id="accountcontroller">修改AccountController</h2>

<p>最後修改<code>AccountController</code>，各自對應的方法要顯示的<code>view</code>，code如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>AccountController.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">AccountController</span> <span class="k">extends</span> <span class="nx">\BaseController</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Display a listing of the resource.</span>
</span><span class="line"><span class="sd">     *</span>
</span><span class="line"><span class="sd">     * @return Response</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">index</span><span class="p">()</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;account.list&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Show the form for creating a new resource.</span>
</span><span class="line"><span class="sd">     *</span>
</span><span class="line"><span class="sd">     * @return Response</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">create</span><span class="p">()</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;account.create&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Store a newly created resource in storage.</span>
</span><span class="line"><span class="sd">     *</span>
</span><span class="line"><span class="sd">     * @return Response</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">store</span><span class="p">()</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="c1">//</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Display the specified resource.</span>
</span><span class="line"><span class="sd">     *</span>
</span><span class="line"><span class="sd">     * @param  int  $id</span>
</span><span class="line"><span class="sd">     * @return Response</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">show</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;account.show&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Show the form for editing the specified resource.</span>
</span><span class="line"><span class="sd">     *</span>
</span><span class="line"><span class="sd">     * @param  int  $id</span>
</span><span class="line"><span class="sd">     * @return Response</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">edit</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;account.edit&#39;</span><span class="p">);</span>
</span><span class="line">        <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Update the specified resource in storage.</span>
</span><span class="line"><span class="sd">     *</span>
</span><span class="line"><span class="sd">     * @param  int  $id</span>
</span><span class="line"><span class="sd">     * @return Response</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">update</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="c1">//</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">
</span><span class="line">    <span class="sd">/**</span>
</span><span class="line"><span class="sd">     * Remove the specified resource from storage.</span>
</span><span class="line"><span class="sd">     *</span>
</span><span class="line"><span class="sd">     * @param  int  $id</span>
</span><span class="line"><span class="sd">     * @return Response</span>
</span><span class="line"><span class="sd">     */</span>
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">destroy</span><span class="p">(</span><span class="nv">$id</span><span class="p">)</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="c1">//</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>可以注意到<code>View::make()</code>內都是用<code>account.XXX</code>，<code>account</code>代表的就是<code>account</code>目錄路徑下的各自的檔案。</p>

<p>如果成功的話可以看到這樣的畫面</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-15.jpg" /></p>

<p>功能的話…to be continued</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[laravel part 4]]></title>
    <link href="http://lighter.tw/blog/2014/06/02/laravel-part-4/"/>
    <updated>2014-06-02T09:16:15+08:00</updated>
    <id>http://lighter.tw/blog/2014/06/02/laravel-part-4</id>
    <content type="html"><![CDATA[<p>這篇會展是簡單的登入檢查、登入的<code>Session</code>建立、登出，這三個；主要是會使用到一些簡單的<code>route</code>、<code>laravel</code>的驗證、<code>Session</code>的建立。廢話不多說，往下看吧。</p>

<p>首先建立一個簡單的<code>view</code>用來查看目前登入狀態，建立的路徑是<code>app/views/show/index.blade.php</code>，我刻意多開了一個<code>show</code>資料夾。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">app
</span><span class="line">  ⌞views
</span><span class="line">    ⌞show
</span><span class="line">      ⌞index.blade.php</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>show/index.blade.php</code>的code如下(這邊可以先忽略變數怎麼來的…往下看你就可以知道了)：</p>

<div><script src="https://gist.github.com/38e234e12e9e98652d5a.js"></script>
<noscript><pre><code>&lt;h1&gt;This is show sample&lt;/h1&gt;
&lt;p&gt;
  Login_status:
  {{ $login_status }}
&lt;/p&gt;</code></pre></noscript></div>

<p>再來就是增加<code>route</code>的設定，開啓<code>routes.php</code>，加入下面的code：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>routes.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="c1">// 登入</span>
</span><span class="line"><span class="nx">Route</span><span class="o">::</span><span class="na">post</span><span class="p">(</span><span class="s1">&#39;login&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;uses&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;HomeController@doLogin&#39;</span><span class="p">]);</span>
</span><span class="line">
</span><span class="line"><span class="c1">// 登出</span>
</span><span class="line"><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;logout&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;uses&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;HomeController@doLogout&#39;</span><span class="p">]);</span>
</span><span class="line">
</span><span class="line"><span class="c1">// show</span>
</span><span class="line"><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;show&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;uses&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;HomeController@show&#39;</span><span class="p">]);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這邊我都香要使用的方法都寫在<code>HomeController</code>內。因此會依據網址的不同執行<code>HomeController</code>內對應的方法。</p>

<p><code>HomeController.php</code>加入的code如下，解釋我都寫在註解上了。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>HomeController.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="c1">// 登入</span>
</span><span class="line"><span class="k">public</span> <span class="k">function</span> <span class="nf">doLogin</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="c1">// 驗證規則</span>
</span><span class="line">  <span class="nv">$rules</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class="line">    <span class="s1">&#39;email&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;required|email&#39;</span><span class="p">,</span> <span class="c1">// 必填欄位，email格式</span>
</span><span class="line">    <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;required|alphaNum|min:3&#39;</span> <span class="c1">// 必填欄位，必須是字母或數字，不得小於3位</span>
</span><span class="line">  <span class="p">);</span>
</span><span class="line">
</span><span class="line">  <span class="c1">// 驗證</span>
</span><span class="line">  <span class="nv">$validator</span> <span class="o">=</span> <span class="nx">Validator</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="nx">Input</span><span class="o">::</span><span class="na">all</span><span class="p">(),</span> <span class="nv">$rules</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">  <span class="c1">// 規則驗證失敗</span>
</span><span class="line">  <span class="k">if</span> <span class="p">(</span><span class="nv">$validator</span><span class="o">-&gt;</span><span class="na">fails</span><span class="p">())</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">    <span class="c1">// 回到首頁，並回傳錯誤訊息，與所有輸入的欄位，除了密碼</span>
</span><span class="line">    <span class="k">return</span> <span class="nx">Redirect</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">)</span>
</span><span class="line">      <span class="o">-&gt;</span><span class="na">withErrors</span><span class="p">(</span><span class="nv">$validator</span><span class="p">)</span>
</span><span class="line">      <span class="o">-&gt;</span><span class="na">withInput</span><span class="p">(</span><span class="nx">Input</span><span class="o">::</span><span class="na">except</span><span class="p">(</span><span class="s1">&#39;password&#39;</span><span class="p">));</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">else</span> <span class="p">{</span>
</span><span class="line">    <span class="nv">$userdata</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class="line">        <span class="s1">&#39;email&#39;</span>    <span class="o">=&gt;</span> <span class="nx">Input</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">),</span>
</span><span class="line">        <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="nx">Input</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;password&#39;</span><span class="p">)</span>
</span><span class="line">      <span class="p">);</span>
</span><span class="line">
</span><span class="line">    <span class="c1">// 與資料庫驗證</span>
</span><span class="line">    <span class="k">if</span> <span class="p">(</span><span class="nx">Auth</span><span class="o">::</span><span class="na">attempt</span><span class="p">(</span><span class="nv">$userdata</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">
</span><span class="line">      <span class="c1">// 驗證成功，並增加一個session key value值</span>
</span><span class="line">      <span class="nx">Session</span><span class="o">::</span><span class="na">put</span><span class="p">(</span><span class="s1">&#39;login_success&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">      <span class="c1">// 導向show/index.blade.php</span>
</span><span class="line">      <span class="k">return</span> <span class="nx">Redirect</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;/show&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="k">else</span> <span class="p">{</span>
</span><span class="line">      <span class="k">return</span> <span class="nx">Redirect</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">public</span> <span class="k">function</span> <span class="nf">doLogout</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nx">Auth</span><span class="o">::</span><span class="na">logout</span><span class="p">();</span>
</span><span class="line">
</span><span class="line">  <span class="c1">// 刪除登入成功的key 值</span>
</span><span class="line">  <span class="nx">Session</span><span class="o">::</span><span class="na">forget</span><span class="p">(</span><span class="s1">&#39;login_seuccess&#39;</span><span class="p">);</span>
</span><span class="line">  <span class="k">return</span> <span class="nx">Redirect</span><span class="o">::</span><span class="na">to</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="k">public</span> <span class="k">function</span> <span class="nf">show</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="c1">// 取得所有session的資料</span>
</span><span class="line">  <span class="nv">$all_session_data</span> <span class="o">=</span> <span class="nx">Session</span><span class="o">::</span><span class="na">all</span><span class="p">();</span>
</span><span class="line">  <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;all_session_data&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$all_session_data</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">  <span class="k">if</span> <span class="p">(</span> <span class="nx">Session</span><span class="o">::</span><span class="na">has</span><span class="p">(</span><span class="s1">&#39;login_success&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">Auth</span><span class="o">::</span><span class="na">check</span><span class="p">()</span> <span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;login_status&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;success&#39;</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">  <span class="k">else</span> <span class="p">{</span>
</span><span class="line">    <span class="nv">$data</span><span class="p">[</span><span class="s1">&#39;login_status&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;failure&#39;</span><span class="p">;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line">
</span><span class="line">  <span class="c1">// 這邊可以注意$data的login_status這個key值</span>
</span><span class="line">  <span class="c1">// 跟 show/index.blade.php 使用的變數做對應</span>
</span><span class="line">  <span class="nv">$view</span> <span class="o">=</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;show.index&#39;</span><span class="p">,</span> <span class="nv">$data</span><span class="p">);</span>
</span><span class="line">  <span class="k">return</span> <span class="nv">$view</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果登入成功的話，可以看到登入成功的訊息</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-13.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[laravel part 3]]></title>
    <link href="http://lighter.tw/blog/2014/05/31/laravel-part-3/"/>
    <updated>2014-05-31T17:18:37+08:00</updated>
    <id>http://lighter.tw/blog/2014/05/31/laravel-part-3</id>
    <content type="html"><![CDATA[<p>接著就是建立資料方面的事情啦！登入總要有先有資料對吧！</p>

<h2 id="step-1-mysql">Step 1. Mysql設定</h2>

<p>開啓<code>phpmyadmin</code>，建立一個新的Database，這邊取名為<code>laravel_sample</code>，如下圖</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-6.jpg" /></p>

<p>再來就是設定<code>laravel</code>的資料庫連線，開啓<code>database.php</code>，找到<code>mysql</code>的設定，輸入<code>database</code>名稱還有連線的帳號密碼</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>database.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="s1">&#39;mysql&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class="line">	<span class="s1">&#39;driver&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;mysql&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;host&#39;</span>      <span class="o">=&gt;</span> <span class="s1">&#39;localhost&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;database&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;laravel_sample&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;username&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;root&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;password&#39;</span>  <span class="o">=&gt;</span> <span class="s1">&#39;password&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;charset&#39;</span>   <span class="o">=&gt;</span> <span class="s1">&#39;utf8&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;collation&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;utf8_unicode_ci&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;prefix&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class="line"><span class="p">),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="step-2-table">Step 2. 建立Table</h2>

<p><code>laravel</code>的<code>artisan</code>很方便，這邊你不需要自己在<code>phpmyadmin</code>手動一個一個輸入column name和type，也不用自己寫mysql的create，可以透過指令和一些code來幫你完成建立Table。</p>

<p>開啟終端機，切換到專案的路徑下，以我的環境來說，我的的專案是在<code>/Application/XAMPP/htdocs/laravel_sample/</code>；然後輸入下面的指令：</p>

<p><code>php artisan migrate:make create-users-table</code></p>

<p>實際上會幫你建立一個 <code>時間</code> 加上 <code>create-users-table</code>的一個檔案，如下圖：</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-7.jpg" /></p>

<p>接著開啟這個檔案，這個檔案的路徑會在<code>app/database/migrations/</code>下</p>

<p>在這檔案會看到兩個method，一個是用來建立，另一個當然就是拿來還原的囉！建立的程式主要就是用來建立Table，直接看code吧，如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
</pre></td><td class="code"><pre><code class=""><span class="line">/**
</span><span class="line"> * Run the migrations.
</span><span class="line"> *
</span><span class="line"> * @return void
</span><span class="line"> */
</span><span class="line">public function up()
</span><span class="line">{
</span><span class="line">	Schema::create('users', function(Blueprint $table)
</span><span class="line">	{
</span><span class="line">		$table-&gt;increments('id');
</span><span class="line">		$table-&gt;string('name', 32);
</span><span class="line">		$table-&gt;string('username', 32);
</span><span class="line">		$table-&gt;string('email', 320);
</span><span class="line">		$table-&gt;string('password', 64);
</span><span class="line">		$table-&gt;timestamps();
</span><span class="line">	});
</span><span class="line">}
</span><span class="line">
</span><span class="line">/**
</span><span class="line"> * Reverse the migrations.
</span><span class="line"> *
</span><span class="line"> * @return void
</span><span class="line"> */
</span><span class="line">public function down()
</span><span class="line">{
</span><span class="line">	Schema::drop('users');
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>再次回到終端機，輸入下面的指令來建立Table</p>

<p><code>php artisan migrate</code></p>

<p>阿…發生錯誤了！</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-8.jpg" /></p>

<p>似乎是無法跟mysql連線，請試著修改<code>database.php</code>的<code>host</code>，修改為<code>127.0.0.1</code>，或者你可以參考這篇<a href="http://stackoverflow.com/questions/14219692/laravel-setup-of-migrations-using-artisan-is-failing">Laravel setup of migrations using Artisan is failing</a>，直接指定<code>unix_socket</code>的路徑，因為我有在遠端安裝的時候遇過這情形。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>database.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="s1">&#39;mysql&#39;</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
</span><span class="line">	<span class="s1">&#39;driver&#39;</span>    <span class="o">=&gt;</span> <span class="s1">&#39;mysql&#39;</span><span class="p">,</span>
</span><span class="line">	<span class="s1">&#39;host&#39;</span>      <span class="o">=&gt;</span> <span class="s1">&#39;127.0.0.1&#39;</span><span class="p">,</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改完再執行一次吧！</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-9.jpg" /></p>

<p>成功囉~</p>

<p>來看看<code>phpmyadmin</code>是不是真的出現<code>users</code>的Table呢！？</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-10.jpg" /></p>

<h2 id="step-3-">Step 3. 建立資料</h2>

<p>建立資料的部分也不用你自己到資料庫裡面一筆一筆key，一樣可以透過<code>artisan</code>幫你完成，但你要先寫好code！在<code>app/database/seeds/</code>下建立一個<code>UsersTableSeeder.php</code>(注意：<code>U</code>要大寫)。建立完成後先不急著開起它來編輯，先看到<code>DatabaseSeeder.php</code>這隻檔案，預設執行時來執行這隻檔案，再由這隻檔案的內容去看你要執行哪隻檔案…直接看code吧！</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>DatabaseSeeder.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="k">public</span> <span class="k">function</span> <span class="nf">run</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">	<span class="nx">Eloquent</span><span class="o">::</span><span class="na">unguard</span><span class="p">();</span>
</span><span class="line">
</span><span class="line">	<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">call</span><span class="p">(</span><span class="s1">&#39;UsersTableSeeder&#39;</span><span class="p">);</span> <span class="c1">// 拿掉原本的註解，注意這邊預設User後是沒有加`s`的記得自己補上，跟檔案名稱對應</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接下來就是編輯你要寫的內容了，開啟<code>UsersTableSeeder.php</code>，code如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>UsersTableSeeder.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class="line">
</span><span class="line"><span class="k">class</span> <span class="nc">UsersTableSeeder</span> <span class="k">extends</span> <span class="nx">Seeder</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">
</span><span class="line">    <span class="k">public</span> <span class="k">function</span> <span class="nf">run</span><span class="p">()</span>
</span><span class="line">    <span class="p">{</span>
</span><span class="line">        <span class="nx">DB</span><span class="o">::</span><span class="na">table</span><span class="p">(</span><span class="s1">&#39;users&#39;</span><span class="p">)</span><span class="o">-&gt;</span><span class="na">delete</span><span class="p">();</span> <span class="c1">// 每次執行都先清理資料表單</span>
</span><span class="line">        <span class="nx">User</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class="line">            <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;lighter&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;awesome&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;test@gmail.com&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="nx">Hash</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;awesome&#39;</span><span class="p">),</span>
</span><span class="line">        <span class="p">));</span>
</span><span class="line">
</span><span class="line">        <span class="nx">User</span><span class="o">::</span><span class="na">create</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
</span><span class="line">            <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Tom&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;username&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;John&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;test2@gmail.com&#39;</span><span class="p">,</span>
</span><span class="line">            <span class="s1">&#39;password&#39;</span> <span class="o">=&gt;</span> <span class="nx">Hash</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;awesome&#39;</span><span class="p">)</span>
</span><span class="line">        <span class="p">));</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>完成之後到終端機輸入下面的指令</p>

<p><code>php artisan db:seed</code></p>

<p>成功囉～這樣以後如果需要很多測試資料，就不用手動一筆一筆操作建立了！而且轉換資料庫也方便很多，不用寫多套SQL語法。</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-11.jpg" /></p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-12.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[laravel part 2]]></title>
    <link href="http://lighter.tw/blog/2014/05/30/laravel-part-2/"/>
    <updated>2014-05-30T23:16:00+08:00</updated>
    <id>http://lighter.tw/blog/2014/05/30/laravel-part-2</id>
    <content type="html"><![CDATA[<p>第二部分就是套用<a href="http://getbootstrap.com/">bootstrap</a>和<a href="http://jquery.com/">jquery</a>，我將檔案放到專案根目錄下的<code>public</code>資料夾內。或者你想引用CDN的也可以，這樣你就不用下載任何東西。</p>

<blockquote>
  <p>jquery其實應該是用不到，只是習慣都會載入而已，接下來也不會有任何event事件需要寫！</p>
</blockquote>

<p>所以我的檔案結構如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">laravel_sample
</span><span class="line">	⌞app
</span><span class="line">	⌞public
</span><span class="line">		⌞bootstrap-3.1.1-dist
</span><span class="line">		⌞jquery-1.11.1.min.js	</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接著我想把首頁換掉，換成登入的畫面，所以先在<code>app/views</code>下建立一個<code>login.blade.php</code>，至於<code>blade</code>是什麼，請參考<a href="http://laravel.com/docs">laravel</a>的官方文件吧。</p>

<p>然後輸入下面的code：</p>

<div><script src="https://gist.github.com/fac184def5041dd0cdae.js?file=login.blade.php"></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;title&gt;Look at me Login&lt;/title&gt;
    {{ HTML::script('public/js/jquery-1.11.0.min.js') }}
    {{ HTML::style('public/bootstrap-3.1.1-dist/css/bootstrap.min.css') }}
    {{ HTML::style('public/bootstrap-3.1.1-dist/css/bootstrap-theme.min.css') }}
  &lt;/head&gt;
  &lt;body&gt;

    &lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col-md-2 col-md-offset-5&quot;&gt;
    {{ Form::open(array('url' =&gt; 'login', 'class' =&gt; 'clearfix', 'role' =&gt; 'form' )) }}

      &lt;h1&gt;Login&lt;/h1&gt;

      &lt;p&gt;
        {{ $errors-&gt;first('email') }}
        {{ $errors-&gt;first('password') }}
      &lt;/p&gt;

      &lt;div class=&quot;form-group&quot;&gt;
        &lt;label for=&quot;exampleInputEmail&quot;&gt; {{ Form::label('email', 'Email Address') }} &lt;/label&gt;
        {{ Form::text('email', Input::old('email'), array('placeholder' =&gt; 'awesome@awesome.com', 'class' =&gt; 'form-control', 'id' =&gt; 'exampleInputEamil')) }}
      &lt;/div&gt;

      &lt;div class=&quot;form-group&quot;&gt;
        &lt;label for=&quot;exampleInputPasword&quot;&gt; {{ Form::label('password', 'Password') }} &lt;/label&gt;
        {{ Form::password('password', ['class' =&gt; 'form-control', 'id' =&gt; 'exampleInputPassword'])  }}
      &lt;/div&gt;

      &lt;p&gt;
        {{ Form::submit('Submit!', ['class' =&gt; 'btn btn-default'])  }}
      &lt;/p&gt;

    {{ Form::close() }}

    &lt;a href=&quot;{{ URL::to('logout') }}&quot;&gt;Logout&lt;/a&gt;
    &lt;/div&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre></noscript></div>

<p>接著修改<code>routes.php</code>，把預設首頁換成<code>login</code>，code如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>routes.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="nx">Route</span><span class="o">::</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">	<span class="k">return</span> <span class="nx">View</span><span class="o">::</span><span class="na">make</span><span class="p">(</span><span class="s1">&#39;login&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>重新整理網頁，就可以看到登入的畫面啦！</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-5.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[laravel part 1]]></title>
    <link href="http://lighter.tw/blog/2014/05/29/laravel-part-1/"/>
    <updated>2014-05-29T13:16:00+08:00</updated>
    <id>http://lighter.tw/blog/2014/05/29/laravel-part-1</id>
    <content type="html"><![CDATA[<h2 id="laravel">安裝 Laravel</h2>

<p>要在自己的電腦上先安裝<a href="https://getcomposer.org/">composer</a>。</p>

<p>然後在終端機下這樣的指令</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">composer create-project laravel/laravel ProjectName</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>安裝完成後開啟網頁輸入網址 <code>http://localhost/laravel_sample/</code>，你會看到下面這樣的畫面</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-1.jpg" /></p>

<p>預設應該是在<code>public</code>資料夾下，所以改成這個路徑<code>http://localhost/laravel_sample/public/index.php</code>，但…還是一樣失敗了   囧rz</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-2.jpg" /></p>

<p>這似乎是<code>storage</code>資料夾權限的問題，所以用終端機切換到<code>app</code>這個路徑就可以看到<code>storage</code>資料夾，然後輸入下面的指令。</p>

<blockquote>
  <p>如果有權限上的問題在前面加個<code>sudo</code></p>
</blockquote>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">chmod -R 777 storage</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>再次重整網頁！成功啦！</p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-3.jpg" /></p>

<p>接著我想把public這層路徑拔掉，所以把這層資料夾的<code>.htaccess</code>, <code>index.php</code>, <code>favicon.ico</code>這三個主要的檔案搬到外面，接著開啟<code>index.php</code>做些小修整，主要是修改兩個路徑而已，程式碼如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>index.php </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="php"><span class="line">
</span><span class="line"><span class="k">require</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/bootstrap/autoload.php&#39;</span><span class="p">;</span>
</span><span class="line"><span class="nv">$app</span> <span class="o">=</span> <span class="k">require_once</span> <span class="nx">__DIR__</span><span class="o">.</span><span class="s1">&#39;/bootstrap/start.php&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>把路徑修改成 <code>http://localhost/laravel_sample/</code></p>

<p><img src="http://lighter.tw/images/laravel_sample/laravel-4.jpg" /></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[php oracle oci_bind_by_name]]></title>
    <link href="http://lighter.tw/blog/2014/04/29/php-oracle-oci-bind-by-name/"/>
    <updated>2014-04-29T23:35:00+08:00</updated>
    <id>http://lighter.tw/blog/2014/04/29/php-oracle-oci-bind-by-name</id>
    <content type="html"><![CDATA[<p>原本使用<code>Codeigniter</code>的<code>bind</code>很簡單！</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$bind = array(':ID' =&gt; 'ABCDE12345');
</span><span class="line">$sql = "SELECT * FROM {$this-&gt;db-&gt;dbprefix('TABLE')} WHERE ID = :ID";
</span><span class="line">$this-&gt;db-&gt;query($sql, $bind);</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>但今天改用<code>php</code>的方法來<code>bind</code>，使用<code>oci_bind_by_name</code>這方法，但是原本參考<a href="http://us2.php.net/manual/en/function.oci-bind-by-name.php">Document</a>很直覺就是帶參數進去，並沒想太多!</p>

<p>但是發生了500 Error找了很久仔細看發現，其實是第三個參數的問題，在文件中第三個參數是使用Reference的方式，所以並不能使用字串，必須要在外面定義一個變數帶入。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class=""><span class="line">// 錯誤
</span><span class="line">oci_bind_by_name($stid, ":ID", "ABCDE12345");
</span><span class="line">
</span><span class="line">// 正確
</span><span class="line">$id = "ABCDE12345";
</span><span class="line">oci_bind_by_name($stid, ":ID", $id);</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section">補充 2014/05/18</h2>

<p>這也是學長發現的問題，在這邊記錄一下！</p>

<p>就是在<code>foreach</code>中使用並不能直接使用<code>$value</code>…看下面的code好了</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class=""><span class="line">foreach($array as $key =&gt; $value) {
</span><span class="line">    // 這邊的$value都只會抓到最後一個的值
</span><span class="line">    // oci_bind_by_name($stid, ":ID", $value); // 會有問題
</span><span class="line">
</span><span class="line">    // 如果要正確取得每次迴圈的值應該修改成如下
</span><span class="line">    oci_bind_by_name($stid, ":ID", $array[$key]); 
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mongodb note]]></title>
    <link href="http://lighter.tw/blog/2014/04/29/mongodb-note/"/>
    <updated>2014-04-29T23:00:00+08:00</updated>
    <id>http://lighter.tw/blog/2014/04/29/mongodb-note</id>
    <content type="html"><![CDATA[<p>記錄一下第一次使用MongoDB發生的蠢問題…</p>

<!-- more -->

<p>使用<code>brew</code>安裝</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ brew install mongodb</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>建立<code>dbpath</code>預設的路徑資料夾</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ sudo mkdir -p /data/db</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>執行<code>mongo</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ mongo</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>這時發生了無法連線的問題</p>

<p><img src="http://lighter.tw/images/mongodb/mongdb_1.jpg" /></p>

<p>似乎是並沒有啟動<code>mongodb</code>的服務，可以用這個指令看看</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ ps -ef | grep [m]ongo</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>啟動<code>mongod</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ mongod --dbpath /data/db --journal</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>再開啟一個新的<code>Terminal</code>輸入<code>mongo</code>，就連到了！</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class=""><span class="line">[~] $ mongo
</span><span class="line">MongoDB shell version: 2.6.0
</span><span class="line">connecting to: test
</span><span class="line">&gt;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="note"><strong>Note</strong></h2>
<ol>
  <li><code>mongod.conf</code>路徑位置<code>/usr/local/etc/</code></li>
  <li>預設<code>mongod.lock</code>路徑位置<code>/usr/local/var/mongodb</code></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Koding Note]]></title>
    <link href="http://lighter.tw/blog/2014/04/20/koding-note/"/>
    <updated>2014-04-20T09:40:00+08:00</updated>
    <id>http://lighter.tw/blog/2014/04/20/koding-note</id>
    <content type="html"><![CDATA[<p>之前就知道Koding這平台，也申請帳號了一陣子，但一直沒有特別去使用。最近因為想說來玩玩看吧，而且又是免費的，空間也很夠用！以下是自己記錄一下使用上遇到的一些問題，大概記錄一下。</p>

<p>列出已經預先幫你安裝的東西，從下圖就可以看到已經幫我們安裝的<code>phpmyadmin</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; help programs</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://lighter.tw/images/koding/koding-2014-04-20_09-50-47.jpg" /></p>

<p>可以看到你的phpmyadmin url及基本的mysql指令，你可以使用它提供的指令去修改密碼</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; help phpmyadmin</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://lighter.tw/images/koding/koding-2014-04-20_10-00-13.jpg" /></p>

<p>修改mysql密碼</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">mysqladmin -u root password YOUR_NEW_PASSWORD</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改mysql root的帳號</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; mysql -u root -p
</span><span class="line">&gt; Enter password:
</span><span class="line">mysql&gt; use mysql;
</span><span class="line">mysql&gt; update user set user='admin' where user='root';
</span><span class="line">mysql&gt; flush privileges;</span></code></pre></td></tr></table></div></figure></notextile></div>

<!-- more -->

<h2 id="laravel">安裝 Laravel</h2>

<p>安裝<code>composer</code>(<a href="https://getcomposer.org/download/">連結</a>)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; cd
</span><span class="line">&gt; cd Web/
</span><span class="line">&gt; curl -sS https://getcomposer.org/installer | php</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://lighter.tw/images/koding/koding-2014-04-20_17-31-50.jpg" /></p>

<p>安裝<code>Laravel</code>(<a href="http://laravel.com/docs/quick#installation">連結</a>)</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; php composer.phar create-project laravel/laravel your-project-name --prefer-dist</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://lighter.tw/images/koding/koding-2014-04-20_17-38-03.jpg" /></p>

<p>安裝<code>php5-mcrypt</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; sudo apt-get install php5-mcrypt</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://lighter.tw/images/koding/koding-2014-04-20_17-53-27.jpg" /></p>

<p>設定<code>sessions</code>資料夾權限，路徑<code>/home/UserNmae/Web/laravel-sample/app/storage/sessions</code></p>

<p><img src="http://lighter.tw/images/koding/koding-2014-04-20_17-57-42.jpg" /></p>

<p>最後試著在瀏覽器輸入<code>http://YourUserName.kd.io/laravel-sample/public/</code>，就可以看到<code>Laravel</code>的預設網頁。</p>

<p><img src="http://lighter.tw/images/koding/koding-2014-04-20_18-07-17.jpg" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sublime Text 3 plugin]]></title>
    <link href="http://lighter.tw/blog/2013/10/03/sublime-text-3-plugin/"/>
    <updated>2013-10-03T14:22:00+08:00</updated>
    <id>http://lighter.tw/blog/2013/10/03/sublime-text-3-plugin</id>
    <content type="html"><![CDATA[<p>整理一下我常用的Sublime Text 3的plugin。</p>

<p>套件安裝管理工具可以參考這個網址</p>

<p><a href="https://sublime.wbond.net/installation">https://sublime.wbond.net/installation</a></p>

<h2 id="section">主題</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">名稱</th>
      <th style="text-align: left">說明</th>
      <th style="text-align: center">ST2</th>
      <th style="text-align: center">ST3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Theme%20-%20Soda">Theme - Soda</a></td>
      <td style="text-align: left"> </td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Theme%20-%20Flatland">Theme - Flatland</a></td>
      <td style="text-align: left"> </td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
  </tbody>
</table>

<h2 id="section-1">工具</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">名稱</th>
      <th style="text-align: left">說明</th>
      <th style="text-align: center">ST2</th>
      <th style="text-align: center">ST3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Emmet">Emmet</a></td>
      <td style="text-align: left">開發HTML好用的工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/SideBarEnhancements">Side​Bar​Enhancements</a></td>
      <td style="text-align: left">側邊欄位加強工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Alignment">Alignment</a></td>
      <td style="text-align: left">等號對齊</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/BracketHighlighter">BracketHighlighter</a></td>
      <td style="text-align: left">左右括號顯示強化</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Themr">Themr</a></td>
      <td style="text-align: left">Theme管理工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/GitGutter">GitGutter</a></td>
      <td style="text-align: left">可看到目前檔案新增及修改的地方</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/AdvancedNewFile">AdvancedNewFile</a></td>
      <td style="text-align: left">新增檔案</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/YUI%20Compressor">YUI Compressor</a></td>
      <td style="text-align: left">css, js 壓縮工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/EasyMotion">EasyMotion</a></td>
      <td style="text-align: left">游標移動工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">需要切換banch</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Git">Git</a></td>
      <td style="text-align: left">git工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Tag">Tag</a></td>
      <td style="text-align: left">在使用html時很好用，只需要打一個”/”符號就會幫你自動完成html關閉的符號</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/CTags">CTags</a></td>
      <td style="text-align: left">可以直接跳到該函數的方法</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Bower">Bower</a></td>
      <td style="text-align: left">套件管理工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/DocBlockr">DocBlockr</a></td>
      <td style="text-align: left">註解工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Better%20CoffeeScript">Better Coffee​Script</a></td>
      <td style="text-align: left">CoffeeScript 工具</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Clipboard%20Manager">Clipboard Manager</a></td>
      <td style="text-align: left">複製記錄管理</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/My%20Snippets">My Snippets</a></td>
      <td style="text-align: left">快速建立 Snippets</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/All%20Autocomplete">All Autocomplete</a></td>
      <td style="text-align: left">自動補齊</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/SublimeCodeIntel">Sublime​Code​Intel</a></td>
      <td style="text-align: left">支援多種程式自動提示功能</td>
      <td style="text-align: center">v</td>
      <td style="text-align: center">v</td>
    </tr>
  </tbody>
</table>

<h3 id="section-2">補充</h3>

<blockquote>
  <p>BracketHighlighter在ST3的安裝無法直接使用<code>package install</code>直接去安裝
需要參考這邊來安裝<a href="https://github.com/facelessuser/BracketHighlighter/tree/BH2ST3">https://github.com/facelessuser/BracketHighlighter/tree/BH2ST3</a></p>
</blockquote>

<blockquote>
  <p>解決BracketHighlighter顏色的問題可以參考這篇<a href="http://stackoverflow.com/questions/15661731/sublime-bracket-highlighter-not-coloring-brackets">http://stackoverflow.com/questions/15661731/sublime-bracket-highlighter-not-coloring-brackets </a></p>
</blockquote>

<h2 id="snippet">Snippet</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: left">名稱</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/CodeIgniter%20Snippets">Codeigniter Snippets</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/Additional%20PHP%20Snippets">Additional PHP Snippets</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/CodeIgniter%20Utilities">CodeIgniter Utilities</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/jQuery%20Snippets%20pack">jQuery Snippets pack</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/CSS%20Snippets">CSS Snippets</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="https://sublime.wbond.net/packages/JavaScript%20Console">JavaScript Console</a></td>
    </tr>
  </tbody>
</table>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[學習iOS App 1]]></title>
    <link href="http://lighter.tw/blog/2013/09/16/xue-xi-ios-app-1/"/>
    <updated>2013-09-16T19:47:00+08:00</updated>
    <id>http://lighter.tw/blog/2013/09/16/xue-xi-ios-app-1</id>
    <content type="html"><![CDATA[<p>這篇並不是要寫學習iOS的文章，而是要推廣一下我翻譯的文章，幾個月前看到<a href="http://www.raywenderlich.com/">Raywenderlich</a>，裡面有些是翻譯過的文章，那我是否可以也來參加這個翻譯呢？於是我就寫信去問了，很高興的是他們也很歡迎我加入，於是就開始利用空閒時間來翻譯，由於在下小弟我英文不是很好…而且有時英文要翻譯成中文真的蠻困難的，翻譯的過程中也曾想是否應該念過一次在用我理解的方式翻譯，還是要照字面上翻譯呢？這蠻苦惱的！由於自己英文不是很好，所以花了一點時間翻譯，然後檢查幾次，終於翻譯好一篇了！</p>

<h1 id="ios-app-1welcome-to-programminghttpwwwraywenderlichcomzh-hans48771e5adb8e7bf92ios-app-1efbc9awelcome-to-programming"><a href="http://www.raywenderlich.com/zh-hans/48771/%E5%AD%B8%E7%BF%92ios-app-1%EF%BC%9Awelcome-to-programming">學習iOS App 1：Welcome to Programming</a></h1>

<p>或許你會覺得怎麼會跟簡體中文在一起呢？沒錯我也是翻譯完才發現這問題，我也寫信去跟他說繁體中文跟簡體中文是不一樣的，但是由於分配工作的問題，似乎也不能修改了。所以就這樣吧….現在還在翻譯第二篇中…其實翻譯還蠻有趣的說！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Dropbox架設私有Git]]></title>
    <link href="http://lighter.tw/blog/2013/08/07/shi-yong-dropboxjia-she-si-you-git/"/>
    <updated>2013-08-07T09:11:00+08:00</updated>
    <id>http://lighter.tw/blog/2013/08/07/shi-yong-dropboxjia-she-si-you-git</id>
    <content type="html"><![CDATA[<p>首先需要在專案資料夾中初始化Git</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git init</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接著在Dropbox中建立你要共享Git的資料夾，並且輸入以下的指令來初始化</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git init --bare</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>回到專案資料夾中，加入Dropbox這個遠端的repo</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git remote add origin ~/Dropbox/XXXX</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接著將專案推倒Dropbox中</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git push origin master</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在另外一台電腦則需要將Dropbox的Git專案clone下來</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git clone ~/Dropbox/XXXX</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>如果A已經變動了專案並且push到Dropbox了，B要將Dropbox變動的取出來可使用</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ git fetch origin master</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NodeJS 安裝]]></title>
    <link href="http://lighter.tw/blog/2013/03/31/nodejs-an-zhuang/"/>
    <updated>2013-03-31T08:31:00+08:00</updated>
    <id>http://lighter.tw/blog/2013/03/31/nodejs-an-zhuang</id>
    <content type="html"><![CDATA[<p>系統：Mountain Lion</p>

<p><a href="http://mxcl.github.com/homebrew/index_zh-tw.html">Homebrew</a>是一個Mac OS套件管理工具</p>

<p>因為Mac上預設都有安裝Ruby了，所以可以直接用以下的指令安裝</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>安裝node</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; brew update
</span><span class="line">&gt; sudo brew install node</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>安裝npm</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt; sudo npm install express -g</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>修改npm PATH，開啟<code>~/.bash_profile</code>，加入以下的代碼</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">export PATH=/usr/local/bin:$PATH:/usr/local/share/npm/bin</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>接著就可以使用<code>express</code>指令來建立專案了</li>
</ol>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">express new project</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql command]]></title>
    <link href="http://lighter.tw/blog/2013/02/12/mysql-command/"/>
    <updated>2013-02-12T15:48:00+08:00</updated>
    <id>http://lighter.tw/blog/2013/02/12/mysql-command</id>
    <content type="html"><![CDATA[<h2 id="section">登入</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;mysql -u root -h localhost -p</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-1">顯示資料庫</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;show databases;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-2">選擇使用的資料庫</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;use database;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-3">顯示目前選擇的資料庫</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;select database();</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-4">顯示目前連線狀態</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;status</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="table">顯示該資料庫的表單(Table)</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;show tables;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="table-1">顯示表單(Table)結構</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;describe 資料表明稱;</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="section-5">顯示資料表所有內容</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&gt;select * from 資料表明稱;</span></code></pre></td></tr></table></div></figure></notextile></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[express with post/get/ajax]]></title>
    <link href="http://lighter.tw/blog/2013/02/04/express-with-post-slash-get-slash-ajax/"/>
    <updated>2013-02-04T16:55:00+08:00</updated>
    <id>http://lighter.tw/blog/2013/02/04/express-with-post-slash-get-slash-ajax</id>
    <content type="html"><![CDATA[<p>使用NodeJS版本為<code>v0.8.18</code></p>

<p>在終端機中輸入</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">express test -e</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>開啟<code>package.json</code>檔案，將版本都修改為<code>*</code>號。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="json"><span class="line"><span class="p">{</span>
</span><span class="line">  <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;application-name&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;version&quot;</span><span class="p">:</span> <span class="s2">&quot;0.0.1&quot;</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;private&quot;</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class="line">  <span class="nt">&quot;scripts&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;start&quot;</span><span class="p">:</span> <span class="s2">&quot;node app&quot;</span>
</span><span class="line">  <span class="p">},</span>
</span><span class="line">  <span class="nt">&quot;dependencies&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class="line">    <span class="nt">&quot;express&quot;</span><span class="p">:</span> <span class="s2">&quot;*&quot;</span><span class="p">,</span>
</span><span class="line">    <span class="nt">&quot;ejs&quot;</span><span class="p">:</span> <span class="s2">&quot;*&quot;</span>
</span><span class="line">  <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>完成後到終端機輸入</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">npm install -l</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>在<code>view</code>資料夾內新增<code>sign.ejs</code>與<code>sign2.ejs</code>兩個檔案，這兩個檔案是用來接收<code>post</code>與<code>get</code>的資料並且顯示出來。</p>

<p><code>index.ejs</code>程式碼如下</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>index.ejs </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line">  <span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;title&gt;</span><span class="err">&lt;</span>%= title %&gt;<span class="nt">&lt;/title&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&#39;stylesheet&#39;</span> <span class="na">href=</span><span class="s">&#39;/stylesheets/style.css&#39;</span> <span class="nt">/&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;//ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class="line">    <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">&quot;text/javascript&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      <span class="nx">jQuery</span><span class="p">(</span><span class="nb">document</span><span class="p">).</span><span class="nx">ready</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#send&#39;</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;click&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class="line">          <span class="kd">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">            <span class="s1">&#39;account&#39;</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#ajax_account&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">(),</span>
</span><span class="line">            <span class="s1">&#39;pass&#39;</span><span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#ajax_pass&#39;</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
</span><span class="line">          <span class="p">};</span>
</span><span class="line">          <span class="nx">$</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/sign3&#39;</span><span class="p">,</span> <span class="nx">data</span> <span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">data2</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">            <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#ajax&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">data2</span><span class="p">);</span>
</span><span class="line">            <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">data2</span><span class="p">);</span>
</span><span class="line">          <span class="p">});</span>
</span><span class="line">        <span class="p">});</span>
</span><span class="line">      <span class="p">});</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;/script&gt;</span>
</span><span class="line">  <span class="nt">&lt;/head&gt;</span>
</span><span class="line">  <span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;h1&gt;</span><span class="err">&lt;</span>%= title %&gt;<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>Welcome to <span class="err">&lt;</span>%= title %&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>GET Method<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;/sign&quot;</span> <span class="na">method=</span><span class="s">&quot;GET&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      <span class="nt">&lt;table&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;</span>Accout<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;account&quot;</span> <span class="nt">/&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;</span>Password<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;text&quot;</span> <span class="na">name=</span><span class="s">&quot;pass&quot;</span> <span class="nt">/&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;send&quot;</span> <span class="nt">/&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">      <span class="nt">&lt;/table&gt;</span>
</span><span class="line">    <span class="nt">&lt;/form&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>POST Method<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;/sign2&quot;</span> <span class="na">method=</span><span class="s">&quot;POST&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      <span class="nt">&lt;table&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;</span>Account<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;account&quot;</span> <span class="na">name=</span><span class="s">&quot;account&quot;</span> <span class="na">id=</span><span class="s">&quot;account&quot;</span><span class="nt">&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;</span>Password<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;pass&quot;</span> <span class="na">name=</span><span class="s">&quot;pass&quot;</span> <span class="na">id=</span><span class="s">&quot;pass&quot;</span><span class="nt">&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;&lt;input</span> <span class="na">type=</span><span class="s">&quot;submit&quot;</span> <span class="na">value=</span><span class="s">&quot;send&quot;</span><span class="nt">&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">      <span class="nt">&lt;/table&gt;</span>
</span><span class="line">    <span class="nt">&lt;/form&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>AJAX Method<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;form</span> <span class="na">action=</span><span class="s">&quot;#&quot;</span><span class="nt">&gt;</span>
</span><span class="line">      <span class="nt">&lt;table&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;</span>Account<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;account&quot;</span> <span class="na">name=</span><span class="s">&quot;account&quot;</span> <span class="na">id=</span><span class="s">&quot;ajax_account&quot;</span><span class="nt">&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;</span>Password<span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;pass&quot;</span> <span class="na">name=</span><span class="s">&quot;pass&quot;</span> <span class="na">id=</span><span class="s">&quot;ajax_pass&quot;</span><span class="nt">&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">        <span class="nt">&lt;tr&gt;</span>
</span><span class="line">          <span class="nt">&lt;td&gt;&lt;button</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">id=</span><span class="s">&quot;send&quot;</span><span class="nt">&gt;</span>send<span class="nt">&lt;/button&gt;&lt;/td&gt;</span>
</span><span class="line">        <span class="nt">&lt;/tr&gt;</span>
</span><span class="line">      <span class="nt">&lt;/table&gt;</span>
</span><span class="line">    <span class="nt">&lt;/form&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;ajax&quot;</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class="line">
</span><span class="line">  <span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接著開啟根目錄下的<code>app.js</code>加入<code>form</code>的<code>action</code>方法進去。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="nx">routes</span><span class="p">.</span><span class="nx">index</span><span class="p">);</span>
</span><span class="line"><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/sign&#39;</span><span class="p">,</span> <span class="nx">routes</span><span class="p">.</span><span class="nx">sign</span><span class="p">);</span>
</span><span class="line"><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/sign2&#39;</span><span class="p">,</span> <span class="nx">routes</span><span class="p">.</span><span class="nx">sign2</span><span class="p">);</span>
</span><span class="line"><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/sign3&#39;</span><span class="p">,</span> <span class="nx">routes</span><span class="p">.</span><span class="nx">sign3</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>定義好對應的方法後，在到<code>routes</code>資料夾內的<code>index.js</code>撰寫方法的執行內容，程式碼如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>index.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="js"><span class="line"><span class="c1">//GET Method</span>
</span><span class="line"><span class="nx">exports</span><span class="p">.</span><span class="nx">sign</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">){</span>
</span><span class="line">  <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="s1">&#39;sign&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Show Result&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="nx">account</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">account</span><span class="p">,</span>
</span><span class="line">    <span class="nx">pass</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">.</span><span class="nx">pass</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="c1">//POST Method</span>
</span><span class="line"><span class="nx">exports</span><span class="p">.</span><span class="nx">sign2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">){</span>
</span><span class="line">  <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="s1">&#39;sign2&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class="line">    <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;Show Result&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="nx">account</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">account</span><span class="p">,</span>
</span><span class="line">    <span class="nx">pass</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">pass</span>
</span><span class="line">  <span class="p">});</span>
</span><span class="line"><span class="p">};</span>
</span><span class="line">
</span><span class="line"><span class="c1">//AJAX Method</span>
</span><span class="line"><span class="nx">exports</span><span class="p">.</span><span class="nx">sign3</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">  <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s1">&#39;Account:&#39;</span> <span class="o">+</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">account</span> <span class="o">+</span> <span class="s1">&#39;, Pass:&#39;</span> <span class="o">+</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">pass</span><span class="p">)</span>
</span><span class="line"><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>sign.ejs</code>與<code>sign2.ejs</code>的內容分別為：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>sign.ejs </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line">  <span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;title&gt;</span><span class="err">&lt;</span>%= title %&gt;<span class="nt">&lt;/title&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&#39;stylesheet&#39;</span> <span class="na">href=</span><span class="s">&#39;/stylesheets/style.css&#39;</span> <span class="nt">/&gt;</span>
</span><span class="line">  <span class="nt">&lt;/head&gt;</span>
</span><span class="line">  <span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>Show Result<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>Accout:<span class="err">&lt;</span>%= account%&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>Password:<span class="err">&lt;</span>%= pass%&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class="line">  <span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>sign2.ejs </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="html"><span class="line"><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class="line"><span class="nt">&lt;html&gt;</span>
</span><span class="line">  <span class="nt">&lt;head&gt;</span>
</span><span class="line">    <span class="nt">&lt;title&gt;</span><span class="err">&lt;</span>%= title %&gt;<span class="nt">&lt;/title&gt;</span>
</span><span class="line">    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">&#39;stylesheet&#39;</span> <span class="na">href=</span><span class="s">&#39;/stylesheets/style.css&#39;</span> <span class="nt">/&gt;</span>
</span><span class="line">  <span class="nt">&lt;/head&gt;</span>
</span><span class="line">  <span class="nt">&lt;body&gt;</span>
</span><span class="line">    <span class="nt">&lt;h1&gt;</span>Show Result<span class="nt">&lt;/h1&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>Accout:<span class="err">&lt;</span>%= account%&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class="line">    <span class="nt">&lt;p&gt;</span>Password:<span class="err">&lt;</span>%= pass%&gt;<span class="nt">&lt;/p&gt;</span>
</span><span class="line">  <span class="nt">&lt;/body&gt;</span>
</span><span class="line"><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>程式碼放在這：<a href="https://github.com/lighter/test">下載</a></p>

<h2 id="section">參考資料</h2>
<p><a href="http://book.nodejs.tw/zh-tw/node_express.html">Express 介紹</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSON資料於TableView與Pull Refresh]]></title>
    <link href="http://lighter.tw/blog/2013/01/10/jsonzi-liao-yu-tableviewyu-pull-refresh/"/>
    <updated>2013-01-10T17:11:00+08:00</updated>
    <id>http://lighter.tw/blog/2013/01/10/jsonzi-liao-yu-tableviewyu-pull-refresh</id>
    <content type="html"><![CDATA[<p>我透過JSON的方式來取得資料，並且可以從網路上取得，並且當資料有變動的時候，透過<code>Table View</code>向下拉的方式來更新資料。我的JSON資料是透過php程式來撰寫。首先先來建置一個簡單的資料表。如下圖，在<code>Table View</code>的部分會呈現名字，當點選名字後會看到該名字的電話號碼。</p>

<p><img src="http://lighter.tw/images/json/json1.png" width="216" /></p>

<!-- more -->

<h3 id="php">php程式碼</h3>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="php"><span class="line"><span class="cp">&lt;?php</span>
</span><span class="line"><span class="k">include</span><span class="p">(</span><span class="s1">&#39;db.php&#39;</span><span class="p">);</span>
</span><span class="line"><span class="nv">$query</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="s1">&#39;SELECT * FROM user&#39;</span><span class="p">);</span>
</span><span class="line"><span class="nv">$json_data</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class="line"><span class="k">while</span><span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nb">mysql_fetch_assoc</span><span class="p">(</span><span class="nv">$query</span><span class="p">))</span> <span class="p">{</span>
</span><span class="line">  <span class="nv">$json_data</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$row</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="k">echo</span> <span class="nb">json_encode</span><span class="p">(</span><span class="nv">$json_data</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>Step 1.</strong>建立<code>Master Detail Application</code>專案。</p>

<p>建立完成專案後先開始編輯<code>MasterViewController.h</code>。建立一個<code>NSMutableArray</code>型態的<code>json_array</code>物件。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.h </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class="line"><span class="k">@interface</span> <span class="nc">MasterViewController</span> : <span class="nc">UITableViewController</span>
</span><span class="line"><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">json_array</span><span class="p">;</span>
</span><span class="line"><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><strong>Step 2.</strong>編輯<code>MasterViewController.m</code></p>

<p>在<code>viewDidLoad</code>方法內加入下面的程式碼</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">@implementation</span> <span class="nc">MasterViewController</span>
</span><span class="line"><span class="k">@synthesize</span> <span class="n">json_array</span><span class="p">;</span>
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class="line">    <span class="c1">//1</span>
</span><span class="line">     <span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span>
</span><span class="line">                  <span class="nl">URLWithString:</span><span class="s">@&quot;http://XXX.XXX/json.php&quot;</span><span class="p">];</span>
</span><span class="line">    <span class="c1">//2</span>
</span><span class="line">    <span class="n">NSData</span> <span class="o">*</span><span class="n">jsonData</span><span class="o">=</span><span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class="line">    <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class="line">
</span><span class="line">    <span class="c1">//3</span>
</span><span class="line">    <span class="n">json_array</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSJSONSerialization</span> <span class="nl">JSONObjectWithData:</span><span class="n">jsonData</span> <span class="nl">options:</span>
</span><span class="line">            <span class="n">NSJSONReadingMutableContainers</span> <span class="nl">error:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">];</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>在上面的程式碼一開始定義一個<code>NSURL</code>類別的<code>url</code>變數，該變數很明顯的可以看到要連接的網頁網址！</li>
  <li>將<code>url</code>網址的資料存放到<code>NSData</code>類別的<code>jsonData</code>變數中。</li>
  <li>接著將取得到的結果放到<code>json</code>陣列中，當中可以看到<code>options:NSJSONReadingMutableContainers</code>這段，這意思是將<code>jsonData</code>取得的<code>JSON</code>資料轉為<code>NSMutableDictionary</code>，之後再取得名稱或電話時可以<code>objecForKey</code>的方式來取得。</li>
</ol>

<p>接著修改<code>Table View Cell</code>的回傳個數</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">-</span> <span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">numberOfRowsInSection:</span><span class="p">(</span><span class="n">NSInteger</span><span class="p">)</span><span class="nv">section</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="n">json_array</span><span class="p">.</span><span class="n">count</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>修改<code>Cell</code>顯示的文字，這邊需要透過<code>objectForKey</code>方法指定Key值為。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">-</span> <span class="p">(</span><span class="n">UITableViewCell</span> <span class="o">*</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="n">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">cellForRowAtIndexPath:</span><span class="p">(</span><span class="n">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">UITableViewCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">tableView</span> <span class="nl">dequeueReusableCellWithIdentifier:</span><span class="s">@&quot;Cell&quot;</span> <span class="nl">forIndexPath:</span><span class="n">indexPath</span><span class="p">];</span>
</span><span class="line">    <span class="n">cell</span><span class="p">.</span><span class="n">textLabel</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="p">[[</span><span class="n">json_array</span> <span class="nl">objectAtIndex:</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">]</span> <span class="nl">objectForKey:</span><span class="s">@&quot;u_name&quot;</span><span class="p">];</span>
</span><span class="line">    <span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>傳遞參數也需要修改一下。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">prepareForSegue:</span><span class="p">(</span><span class="n">UIStoryboardSegue</span> <span class="o">*</span><span class="p">)</span><span class="nv">segue</span> <span class="nf">sender:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="k">if</span> <span class="p">([[</span><span class="n">segue</span> <span class="n">identifier</span><span class="p">]</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;showDetail&quot;</span><span class="p">])</span> <span class="p">{</span>
</span><span class="line">        <span class="n">NSIndexPath</span> <span class="o">*</span><span class="n">indexPath</span> <span class="o">=</span> <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">tableView</span> <span class="n">indexPathForSelectedRow</span><span class="p">];</span>
</span><span class="line">        <span class="p">[[</span><span class="n">segue</span> <span class="n">destinationViewController</span><span class="p">]</span> <span class="nl">setDetailItem:</span><span class="p">[</span><span class="n">json_array</span>
</span><span class="line">                                                          <span class="nl">objectAtIndex:</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">]];</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>將<code>JSON</code>的資料放入<code>Table View</code>中會如下圖所示(資料內容有新增修改過)。</p>

<p><img src="http://lighter.tw/images/json/json2.png" width="216" />
<img src="http://lighter.tw/images/json/json3.png" width="216" /></p>

<p>接下來當我<code>MySql</code>有新增資料，或是刪除資料時，我想要同步更新到<code>Table View</code>中，所以我使用了<code>PullToRefresh</code>這個套件。網路上蠻多人都說<code>EGOTableViewPullRefresh</code>這套，但是它似乎不支援<code>ARC</code>，所以我就改用別的了。</p>

<p>這個套件使用上很簡單！首先下載好它的檔案<a href="https://github.com/sonnyparlin/PullToRefresh">Here</a>，並加入專案內。</p>

<p><img src="http://lighter.tw/images/json/json4.png" /></p>

<p>接著加入<code>QuartzCore.framework</code>。</p>

<p><img src="http://lighter.tw/images/json/json5.png" /></p>

<p>修改<code>MasterViewController.h</code>，程式碼如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class="line"><span class="cp">#import &quot;PullToRefreshView.h&quot; </span><span class="c1">//1</span>
</span><span class="line">
</span><span class="line"><span class="k">@interface</span> <span class="nc">MasterViewController</span> : <span class="nc">UITableViewController</span><span class="o">&lt;</span><span class="n">PullToRefreshViewDelegate</span><span class="o">&gt;</span> <span class="c1">//2</span>
</span><span class="line"><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">NSMutableArray</span> <span class="o">*</span><span class="n">json_array</span><span class="p">;</span>
</span><span class="line"><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="n">PullToRefreshView</span> <span class="o">*</span><span class="n">pull</span><span class="p">;</span> <span class="c1">//3</span>
</span><span class="line"><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>回到<code>MasterViewController.m</code>在<code>viewDidLoad</code>將<code>PullToRefresh</code>加入到<code>Table View</code>中。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">@implementation</span> <span class="nc">MasterViewController</span>
</span><span class="line"><span class="k">@synthesize</span> <span class="n">json_array</span><span class="p">,</span> <span class="n">pull</span><span class="p">;</span>
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class="line">	<span class="c1">// Do any additional setup after loading the view, typically from a nib.</span>
</span><span class="line">    <span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span>
</span><span class="line">                  <span class="nl">URLWithString:</span><span class="s">@&quot;http://lighter.cp22.secserverpros.com/lighter127/JSON/json.php&quot;</span><span class="p">];</span>
</span><span class="line">    <span class="n">NSData</span> <span class="o">*</span><span class="n">jsonData</span><span class="o">=</span><span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class="line">    <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class="line">    <span class="n">json_array</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSJSONSerialization</span> <span class="nl">JSONObjectWithData:</span><span class="n">jsonData</span> <span class="nl">options:</span>
</span><span class="line">            <span class="n">NSJSONReadingMutableContainers</span> <span class="nl">error:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">];</span>
</span><span class="line">
</span><span class="line">    <span class="c1">//pull refresh</span>
</span><span class="line">    <span class="n">pull</span> <span class="o">=</span> <span class="p">[[</span><span class="n">PullToRefreshView</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithScrollView:</span><span class="p">(</span><span class="n">UIScrollView</span> <span class="o">*</span><span class="p">)</span> <span class="n">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">];</span>
</span><span class="line">    <span class="p">[</span><span class="n">pull</span> <span class="nl">setDelegate:</span><span class="n">self</span><span class="p">];</span>
</span><span class="line">    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">tableView</span> <span class="nl">addSubview:</span><span class="n">pull</span><span class="p">];</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>當<code>Table View</code>往下拉的時候會呼叫<code>pullToRefreshViewShouldRefresh:</code>方法。這裡我會呼叫另一個自定的方法<code>reloadTableData</code>，而在該方法內我重新再連一次<code>json.php</code>的網頁並更新<code>json_array</code>的內容，最後才呼叫<code>tableView</code>的<code>reloadData</code>。</p>

<p>當資料更新結束後，呼叫<code>finishedLoading</code>方法，結束<code>Pull Refresh</code>的動作。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>MasterViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="cp">#pragma mark - Table View Pull Refresh</span>
</span><span class="line">
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">pullToRefreshViewShouldRefresh:</span><span class="p">(</span><span class="n">PullToRefreshView</span> <span class="o">*</span><span class="p">)</span><span class="nv">view</span><span class="p">;</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="p">[</span><span class="n">self</span> <span class="n">reloadTableData</span><span class="p">];</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="n">reloadTableData</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSURL</span>
</span><span class="line">                  <span class="nl">URLWithString:</span><span class="s">@&quot;http://XXX.XXX/json.php&quot;</span><span class="p">];</span>
</span><span class="line">    <span class="n">NSData</span> <span class="o">*</span><span class="n">jsonData</span><span class="o">=</span><span class="p">[</span><span class="n">NSData</span> <span class="nl">dataWithContentsOfURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class="line">    <span class="n">NSError</span> <span class="o">*</span><span class="n">error</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class="line">    <span class="n">json_array</span> <span class="o">=</span> <span class="p">[</span><span class="n">NSJSONSerialization</span> <span class="nl">JSONObjectWithData:</span><span class="n">jsonData</span> <span class="nl">options:</span>
</span><span class="line">                  <span class="n">NSJSONReadingMutableContainers</span> <span class="nl">error:</span><span class="o">&amp;</span><span class="n">error</span><span class="p">];</span>
</span><span class="line">    <span class="p">[</span><span class="n">self</span><span class="p">.</span><span class="n">tableView</span> <span class="n">reloadData</span><span class="p">];</span>
</span><span class="line">    <span class="p">[</span><span class="n">pull</span> <span class="n">finishedLoading</span><span class="p">];</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<blockquote>
  <p>註：由於向下捲動<code>Table View</code>的速度比我截圖速度快….我就放棄了…</p>
</blockquote>

<h1 id="section">參考資料</h1>
<ol>
  <li><a href="http://sonnyparlin.com/2011/12/pulltorefresh-ios-5-and-arc-tutorial/">PullToRefresh iOS 5 and ARC Tutorial</a></li>
  <li><a href="https://github.com/sonnyparlin/PullToRefresh">PullToRefresh</a></li>
  <li><a href="https://github.com/enormego/EGOTableViewPullRefresh">EGOTableViewPullRefresh</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Core Image]]></title>
    <link href="http://lighter.tw/blog/2012/11/06/core-image/"/>
    <updated>2012-11-06T19:01:00+08:00</updated>
    <id>http://lighter.tw/blog/2012/11/06/core-image</id>
    <content type="html"><![CDATA[<p><code>Core Image</code>是一項Mac OS X的技術，利用機器的繪圖處理器來作影像相關特效。於2004年8月的世界開發者大會(WWDC)中展示。(引用自<a href="http://zh.wikipedia.org/wiki/Core_Image">維基百科Core Image</a>)</p>

<p>我們可以透過<code>Core Image</code>的框架(framework)來調整圖片的顏色、亮度…等。而Core Image包含了很多的濾鏡的效果，這些都可以在Document中找到。</p>

<p>而<code>Core Image</code>有幾個重要的類別</p>

<ol>
  <li><code>CIContext</code>: 所有Core Image的處理都透過CIContext完成。這有點類似於Core Graphics或OpenGL的Context。</li>
  <li><code>CIImage</code>: 該類別可持有圖片檔案。它可透過UIImage、圖片檔案或者是像素檔案來建立。</li>
  <li><code>CIFilter</code>: 濾鏡類別擁有字典(dictionary)，可以指定濾鏡效果的，例如自然飽和度(vibrance)、色彩反轉(color inversion)、剪裁(cropping)…等。</li>
</ol>

<!-- more -->

<p><strong>Step 1. 加入<code>CoreImage.framework</code></strong></p>

<p>加入CoreImage.framework，並且準備好一張圖片加入到專案中。</p>

<p><img src="http://lighter.tw/images/CoreImage/1.png" /></p>

<p><strong>Step 2. 編輯<code>MainStoryboard.storyboard</code></strong></p>

<p>加入</p>

<ol>
  <li>UIImageView</li>
  <li>Round Rect Button</li>
</ol>

<p><img src="http://lighter.tw/images/CoreImage/2.png" /></p>

<p>這邊加入3個按鈕，分別用來呈現不同的效果。</p>

<p><strong>Step 3. 編輯ViewController</strong></p>

<p>首先編輯<code>ViewController.h</code>，程式碼如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ViewController.h </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="cp">#import &lt;UIKit/UIKit.h&gt;</span>
</span><span class="line">
</span><span class="line"><span class="k">@interface</span> <span class="nc">ViewController</span> : <span class="nc">UIViewController</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="n">CIContext</span> <span class="o">*</span><span class="n">context</span><span class="p">;</span>
</span><span class="line">    <span class="n">CIFilter</span> <span class="o">*</span><span class="n">filter</span><span class="p">;</span>
</span><span class="line">    <span class="n">CIImage</span> <span class="o">*</span><span class="n">inputImage</span><span class="p">;</span>    <span class="c1">//輸入的圖片</span>
</span><span class="line">    <span class="n">CIImage</span> <span class="o">*</span><span class="n">outputImage</span><span class="p">;</span>   <span class="c1">//輸出濾鏡效果的圖片</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="k">@property</span> <span class="p">(</span><span class="n">strong</span><span class="p">,</span> <span class="n">nonatomic</span><span class="p">)</span> <span class="kt">IBOutlet</span> <span class="n">UIImageView</span> <span class="o">*</span><span class="n">imageView</span><span class="p">;</span>
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">filter1:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span> <span class="c1">//濾鏡效果1</span>
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">filter2:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span> <span class="c1">//濾鏡效果2</span>
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">filter3:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span><span class="p">;</span> <span class="c1">//濾鏡效果3</span>
</span><span class="line"><span class="k">@end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>ViewController.m</code>的程式碼如下：</p>

<p>首先在<code>viewDidLoad</code>方法指定圖片給<code>imageView</code>。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">@implementation</span> <span class="nc">ViewController</span>
</span><span class="line"><span class="k">@synthesize</span> <span class="n">imageView</span><span class="p">;</span>
</span><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidLoad</span>
</span><span class="line"><span class="p">{</span>
</span><span class="line">    <span class="p">[</span><span class="n">super</span> <span class="n">viewDidLoad</span><span class="p">];</span>
</span><span class="line">    <span class="n">UIImage</span> <span class="o">*</span><span class="n">img</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;test.jpg&quot;</span><span class="p">];</span>
</span><span class="line">    <span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">img</span><span class="p">;</span>
</span><span class="line">    <span class="n">inputImage</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CIImage</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;test.jpg&quot;</span><span class="p">]];</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line"><span class="p">.</span> <span class="p">.</span> <span class="p">.</span> <span class="p">.</span> <span class="p">.</span> <span class="err">略</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>接著開始撰寫濾鏡效果的按鈕方法，這邊只介紹一個，程式碼如下：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ViewController.m </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="k">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">filter1:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span> <span class="p">{</span>
</span><span class="line">	<span class="c1">//1</span>
</span><span class="line">    <span class="n">inputImage</span> <span class="o">=</span> <span class="p">[[</span><span class="n">CIImage</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithImage:</span><span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageNamed:</span><span class="s">@&quot;test.jpg&quot;</span><span class="p">]];</span>
</span><span class="line">
</span><span class="line">    <span class="c1">//2</span>
</span><span class="line">    <span class="n">context</span> <span class="o">=</span> <span class="p">[</span><span class="n">CIContext</span> <span class="nl">contextWithOptions:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class="line">
</span><span class="line">    <span class="c1">//3</span>
</span><span class="line">    <span class="n">filter</span> <span class="o">=</span> <span class="p">[</span><span class="n">CIFilter</span> <span class="nl">filterWithName:</span><span class="s">@&quot;CIColorPosterize&quot;</span><span class="p">];</span>
</span><span class="line">    <span class="p">[</span><span class="n">filter</span> <span class="nl">setValue:</span><span class="n">inputImage</span> <span class="nl">forKey:</span><span class="s">@&quot;inputImage&quot;</span><span class="p">];</span>
</span><span class="line">    <span class="p">[</span><span class="n">filter</span> <span class="nl">setValue:</span><span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithFloat:</span><span class="mf">3.0</span><span class="p">]</span> <span class="nl">forKey:</span><span class="s">@&quot;inputLevels&quot;</span><span class="p">];</span>
</span><span class="line">	
</span><span class="line">	 <span class="c1">//4</span>
</span><span class="line">    <span class="n">outputImage</span> <span class="o">=</span> <span class="p">[</span><span class="n">filter</span> <span class="n">outputImage</span><span class="p">];</span>
</span><span class="line">    <span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="n">UIImage</span> <span class="nl">imageWithCGImage:</span><span class="p">[</span><span class="n">context</span> <span class="nl">createCGImage:</span><span class="n">outputImage</span> <span class="nl">fromRect:</span><span class="n">outputImage</span><span class="p">.</span><span class="n">extent</span><span class="p">]];</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ol>
  <li>指定輸入的圖片。</li>
  <li><code>CIContext</code>指定要使用CPU或是GPU來處理，這裡使用預設值就可以，所以指定為<code>nil</code>。</li>
  <li>設定濾鏡效果，後面會介紹如何知道有哪些濾鏡效果及參數的設定。</li>
  <li>透過<code>outputImage</code>這個方法可以取得濾鏡效果處理後的<code>CIImage</code>，最後將處理過後的圖片指定給<code>imageView</code>。</li>
</ol>

<p><strong>Step 4. 編譯專案</strong></p>

<p>在一開始可以看到<code>UIImageView</code>的原始圖案，點下濾鏡效果按鈕後可以看到圖片改變了！！</p>

<p><img src="http://lighter.tw/images/CoreImage/3.png" width="216" />
<img src="http://lighter.tw/images/CoreImage/4.png" width="216" /></p>

<p>就這麼簡單吧！但是一開始困擾我的問題是，我怎麼知道CoreImage有提供哪些濾鏡效果呢？其實這在Document都有詳細的說明，但要如何尋找呢？下面的方法其實我也是看過人家影片教學，才知道有這樣的尋找方式！我覺得非常方便。</p>

<p>首先開啟到<code>ViewController.m</code>，並找到<code>CIFilter</code>，為了強調要選取它，所以在此將它反白，不然將游標移到<code>CIFilter</code>上就可以了。接著選取到右上方的<code>Show Quick Help Inspector</code>，在下方可以看到<code>Core Image Filter Reference</code>，如下圖：</p>

<p><img src="http://lighter.tw/images/CoreImage/5.png" /></p>

<p>點選<code>Core Image Filter Reference</code>後會跳出一個新的視窗，會顯示<code>Filter</code>效果有哪些，如下圖：</p>

<p><img src="http://lighter.tw/images/CoreImage/6.png" /></p>

<p>接著先找尋到先前使用到的<code>CIColorPosterize</code>這個濾鏡效果，點選下去</p>

<p><img src="http://lighter.tw/images/CoreImage/7.png" /></p>

<p>點選後會看到<code>CIColorPosterize</code>這個濾鏡效果的參數有哪些，這個效果的參數只有兩個，分別為<code>inputImage</code>與<code>inputLevels</code>，除了參數，下方也會有簡單的圖示呈現該濾鏡的效果如何，如下圖：</p>

<p><img src="http://lighter.tw/images/CoreImage/8.png" /></p>

<p>在這邊可以看到這兩個參數跟<code>forKey</code>值很像，這邊的方式就是透過setValue指定參數的值，在指定<code>forKey</code>值來指設定參數，所以當濾鏡效果不同時，會有不一樣的<code>forKey</code>值，這都需要參考到Document的說明！</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="objc"><span class="line"><span class="p">[</span><span class="n">filter</span> <span class="nl">setValue:</span><span class="n">inputImage</span> <span class="nl">forKey:</span><span class="s">@&quot;inputImage&quot;</span><span class="p">];</span>
</span><span class="line"><span class="p">[</span><span class="n">filter</span> <span class="nl">setValue:</span><span class="p">[</span><span class="n">NSNumber</span> <span class="nl">numberWithFloat:</span><span class="mf">3.0</span><span class="p">]</span> <span class="nl">forKey:</span><span class="s">@&quot;inputLevels&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h1 id="section">參考資料</h1>
<ol>
  <li><a href="http://www.raywenderlich.com/5689/beginning-core-image-in-ios-5">Beginning Core Image in iOS 5 Tutorial</a></li>
  <li><a href="http://www.raywenderlich.com/22167/beginning-core-image-in-ios-6">Beginning Core Image in iOS 6</a></li>
  <li><a href="http://itouchs.blogspot.tw/2011/12/filter4cam-core-image-tutorial.html">Filter4Cam 學習之 Core Image Tutorial</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
